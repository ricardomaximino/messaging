package com.brasajava.rabbitstreamreactiveone.controller;

import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.brasajava.rabbitstreamreactiveone.domain.ContactEvent;
import com.brasajava.rabbitstreamreactiveone.repository.ContactEventRepository;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@RestController
@CrossOrigin("*")
public class ContactEventController {
	
	@Autowired
	private ContactEventRepository repository;
	
	@GetMapping("/contact-event")
	public Flux<ContactEvent> findAll(){
		return repository.findAll();
	}
	
	@GetMapping(value = "/contact-event", params = "sendDate")
	public Flux<ContactEvent> findBySendDate(@RequestParam(value = "setDate", required=true) LocalDateTime date){
		return repository.findBySendDate(date);
	}
	
	@GetMapping(value = "/contact-event", params = "receiveDate")
	public Flux<ContactEvent> findByReceiveDate(@RequestParam(value = "receiveDate", required=true) LocalDateTime date){
		return repository.findByReceiveDate(date);
	}
	
	@GetMapping("contact-event/{id}")
	public Mono<ContactEvent> findById(@PathVariable("id") String id){
		return repository.findById(id);
	}

}
