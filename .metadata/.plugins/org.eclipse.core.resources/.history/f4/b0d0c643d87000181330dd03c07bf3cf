package com.brasajava.rabbitstreamreactiveone.service;

import org.springframework.cloud.stream.annotation.EnableBinding;
import org.springframework.cloud.stream.annotation.Output;
import org.springframework.cloud.stream.reactive.FluxSender;
import org.springframework.cloud.stream.reactive.StreamEmitter;

import com.brasajava.rabbitstreamreactiveone.channel.ContactSenderBinding;
import com.brasajava.rabbitstreamreactiveone.domain.ContactEvent;

import reactor.core.publisher.Flux;

@EnableBinding(ContactSenderBinding.class)
public class ContactSenderService {
	
	private FluxSender createdContactEventSender;
	private FluxSender updatedContactEventSender;
	private FluxSender deletedContactEventSender;
	private FluxSender notSavedContactEventSender;

	@StreamEmitter
	public void setContactCreatedEvent(@Output(ContactSenderBinding.CREATED_CONTACT) FluxSender sender) {
		this.createdContactEventSender = sender;
	}

	@StreamEmitter
	public void setContactNotSavedEvent(@Output(ContactSenderBinding.NOT_SAVED_CONTACT) FluxSender sender) {
		this.notSavedContactEventSender = sender;
	}
	
	@StreamEmitter
	public void setContactUpdateEvent(@Output(ContactSenderBinding.UPDATED_CONTACT) FluxSender sender) {
		this.updatedContactEventSender = sender;
	}
	
	@StreamEmitter
	public void setContactDeleteEvent(@Output(ContactSenderBinding.DELETED_CONTACT) FluxSender sender) {
		this.deletedContactEventSender = sender;
	}

	public void sendContactCreatedEvent(ContactEvent event) {
		System.out.println("Sending CONTACT CREATED event -> " + event);
		createdContactEventSender.send(Flux.just(event));
	}

	public void sendContactSavedEvent(ContactEvent event) {
		System.out.println("Sending CONTACT SAVED event -> " + event);
		savedContactEventSender.send(Flux.just(event));
	}
	
	public void sendContactNotSavedEvent(ContactEvent event) {
		System.out.println("Sending CONTACT NOT SAVED event -> " + event);
		notSavedContactEventSender.send(Flux.just(event));
	}
	
	public void sendContactUpdatedEvent(ContactEvent event) {
		System.out.println("Sending CONTACT UPDATED event -> " + event);
		updatedContactEventSender.send(Flux.just(event));
	}
	
	public void sendContactDeleteEvent(ContactEvent event) {
		System.out.println("Sending CONTACT DELETED event -> " + event);
		deletedContactEventSender.send(Flux.just(event));
	}
}
